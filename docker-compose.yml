services:
  main-service:
    build: main-service
    image: ewm-main-service
    container_name: ewm-main-service
    ports:
      - "8080:8080"
    depends_on:
      main-db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://main-db:5433/maindb
      - SPRING_DATASOURCE_USERNAME=dbuser
      - SPRING_DATASOURCE_PASSWORD=12345

  stat-server:
    build: stat
    image: ewm-stat-server
    container_name: ewm-stat-server
    ports:
      - "9090:9090"
    depends_on:
      stat-db:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://stat-db:5432/statdb
      - SPRING_DATASOURCE_USERNAME=dbuser
      - SPRING_DATASOURCE_PASSWORD=12345

  main-db:
    image: postgres:14-alpine
    container_name: main-db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=maindb
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=12345
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  stat-db:
    image: postgres:14-alpine
    container_name: stat-db
    ports:
      - "5432:5432"
    volumes:
      - ./stat/stat-server/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    environment:
      - POSTGRES_DB=statdb
      - POSTGRES_USER=dbuser
      - POSTGRES_PASSWORD=12345
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10